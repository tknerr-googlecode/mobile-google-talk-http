Base64 -> c:
    byte[] base64Alphabet -> a
    byte[] lookUpBase64Alphabet -> b
    byte[] decode(byte[]) -> a
ChangeStatus -> w:
    javax.microedition.lcdui.Form form -> e
    javax.microedition.lcdui.Command ok -> f
    javax.microedition.lcdui.Command exit -> g
    javax.microedition.lcdui.ChoiceGroup status -> h
    javax.microedition.lcdui.TextField tf -> i
    RosterList rl -> j
    custom.RichText statusText -> k
    javax.microedition.lcdui.Display d -> l
    int online -> a
    int dnd -> b
    int away -> c
    int xa -> d
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
ConnectLog -> e:
    javax.microedition.lcdui.Form form -> d
    javax.microedition.lcdui.Command close -> e
    javax.microedition.lcdui.Command back -> f
    NetworkThread thread -> g
    RosterList roster -> a
    javax.microedition.lcdui.Display d -> b
    JabberProfile jp -> c
    ConnectLog instance -> h
    ConnectLog getInstance() -> a
    void setCurrent() -> b
    void newSession(javax.microedition.lcdui.Display,JabberProfile) -> a
    void initRoster() -> c
    void addMessage(java.lang.String) -> a
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
ContactAdd -> f:
    javax.microedition.lcdui.Display d -> a
    javax.microedition.lcdui.Displayable ret -> b
    NetworkThread nt -> c
    javax.microedition.lcdui.Form form -> d
    javax.microedition.lcdui.Command ok -> e
    javax.microedition.lcdui.Command close -> f
    javax.microedition.lcdui.TextField tb -> g
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
ContactRename -> u:
    javax.microedition.lcdui.Display d -> a
    RosterList ret -> b
    RosterItem ri -> c
    NetworkThread nt -> d
    javax.microedition.lcdui.Form form -> e
    javax.microedition.lcdui.Command ok -> f
    javax.microedition.lcdui.Command close -> g
    javax.microedition.lcdui.TextField tb -> h
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
HTTPBindNetworkThread -> i:
    int DEFAULT_WAIT -> a
    java.lang.String httpburl -> i
    int wait -> j
    javax.microedition.io.HttpConnection[] conn -> k
    int defaultConn -> l
    long rid -> m
    java.lang.String sid -> n
    boolean terminating -> o
    java.lang.Thread secondThread -> p
    void run() -> run
    void readAndHandleMultipleStanza(int) -> a
    XmlNode readStanza(int) -> b
    XmlNode readStanza() -> a
    XmlNode readResponse(int) -> c
    void startSession$61ac76cf(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void terminate(boolean) -> a
    void writeToAir(java.lang.String,int) -> a
    void writeToAir(java.lang.String) -> a
    void writeToAirPlain(java.lang.String,int) -> b
    long generateInitialRequestId() -> d
    int access$0(HTTPBindNetworkThread) -> a
    void access$1(HTTPBindNetworkThread,java.lang.String,int) -> a
    void access$2(HTTPBindNetworkThread,int) -> a
HTTPBindNetworkThread$1 -> b:
    HTTPBindNetworkThread this$0 -> a
    java.lang.String val$mess -> b
    void run() -> run
JabberProfile -> q:
    int COLOR_TO -> a
    int COLOR_FROM -> b
    java.lang.String name -> c
    java.lang.String host -> d
    java.lang.String httpbindurl -> e
    java.lang.String user -> f
    java.lang.String pass -> g
    java.lang.String status -> h
    int ssl -> i
    int httpbind -> j
    int auto -> k
    int port -> l
    int sortBy -> m
    int statusID -> n
    int offline -> o
    int id -> p
    int isGoogle -> q
    int lockStatus -> r
    int lockStatusStr -> s
    int autoReconnect -> t
    int histLength -> u
    int volume -> v
    int smiles -> w
    byte[] toByteArray() -> a
    boolean fromByteArray(byte[]) -> a
    java.lang.String getStatus() -> b
    java.lang.String toString() -> toString
    java.lang.String getShowStr() -> c
    int getHistLength() -> d
    void setVolume(int) -> a
LogViewer -> t:
    javax.microedition.lcdui.Form f -> a
    javax.microedition.lcdui.Command exit -> b
    javax.microedition.lcdui.Display d -> c
    RosterList rl -> d
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
MGTalk -> MGTalk:
    MGTalk instance -> a
    boolean DEBUG -> b
    void startApp() -> startApp
    void pauseApp() -> pauseApp
    void destroyApp(boolean) -> destroyApp
MailViewer -> p:
    javax.microedition.lcdui.Form f -> a
    javax.microedition.lcdui.Command exit -> b
    javax.microedition.lcdui.Display d -> c
    RosterList rl -> d
    int mailCount -> e
    javax.microedition.lcdui.Image mailImg -> f
    void addMail(java.lang.String,java.lang.String,java.lang.String) -> a
    void startMe() -> a
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
MessageForm -> o:
    RosterList roster -> e
    RosterItem ri -> f
    javax.microedition.lcdui.Form form -> a
    javax.microedition.lcdui.Display d -> g
    javax.microedition.lcdui.TextField tb -> h
    custom.RichText statusHolder -> i
    javax.microedition.lcdui.Command send -> b
    javax.microedition.lcdui.Command quote -> c
    javax.microedition.lcdui.Command toList -> d
    void startForm() -> a
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
    int findPosition(javax.microedition.lcdui.Item) -> a
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String) -> a
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Item) -> commandAction
NetworkThread -> j:
    boolean ended -> b
    boolean busy -> c
    boolean google -> d
    boolean terminated -> e
    java.lang.String token -> f
    ConnectLog log -> g
    boolean statusSet -> h
    void run() -> run
    void terminate(boolean) -> a
    void writeToAir(java.lang.String) -> a
    XmlNode readStanza() -> a
    java.lang.String ToUTF(java.lang.String) -> b
    java.lang.String generateAuthResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    byte[] md5It(java.lang.String) -> c
    byte[] md5It(byte[],int) -> a
    java.lang.String readLine(java.io.DataInputStream) -> a
    java.lang.String URLencode(java.lang.String) -> e
    java.lang.String getGoogleToken(java.lang.String,java.lang.String) -> a
    void doAuthentication(XmlNode,java.lang.String,java.lang.String,java.lang.String) -> a
    void handleStanza(XmlNode) -> a
    void generatePresense() -> b
    void reconnect() -> c
    void log(java.lang.String) -> d
ProfileEdit -> h:
    javax.microedition.lcdui.Form f -> a
    JabberProfile j -> b
    javax.microedition.lcdui.Command c1 -> c
    javax.microedition.lcdui.Command c2 -> d
    javax.microedition.lcdui.Command c3 -> e
    javax.microedition.rms.RecordStore rs -> f
    javax.microedition.lcdui.Display d -> g
    javax.microedition.lcdui.TextField name -> h
    javax.microedition.lcdui.TextField host -> i
    javax.microedition.lcdui.TextField httpbindurl -> j
    javax.microedition.lcdui.TextField user -> k
    javax.microedition.lcdui.TextField pass -> l
    javax.microedition.lcdui.TextField status -> m
    javax.microedition.lcdui.TextField port -> n
    javax.microedition.lcdui.TextField histLength -> o
    javax.microedition.lcdui.ChoiceGroup ssl -> p
    javax.microedition.lcdui.ChoiceGroup httpbind -> q
    javax.microedition.lcdui.ChoiceGroup auto -> r
    javax.microedition.lcdui.ChoiceGroup sortBy -> s
    javax.microedition.lcdui.ChoiceGroup statusID -> t
    javax.microedition.lcdui.ChoiceGroup offline -> u
    javax.microedition.lcdui.ChoiceGroup isGoogle -> v
    javax.microedition.lcdui.ChoiceGroup lockStatus -> w
    javax.microedition.lcdui.ChoiceGroup lockStatusStr -> x
    javax.microedition.lcdui.ChoiceGroup autoReconnect -> y
    javax.microedition.lcdui.ChoiceGroup smiles -> z
    javax.microedition.lcdui.Gauge volume -> A
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
ProfileList -> k:
    javax.microedition.lcdui.List l -> f
    javax.microedition.rms.RecordStore rs -> g
    javax.microedition.lcdui.Command c1 -> a
    javax.microedition.lcdui.Command c2 -> b
    javax.microedition.lcdui.Command c3 -> c
    javax.microedition.lcdui.Display d -> d
    java.util.Vector jps -> e
    void setCurrent() -> a
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
RequestAuth -> s:
    javax.microedition.lcdui.Displayable ret -> a
    javax.microedition.lcdui.Command ok -> b
    javax.microedition.lcdui.Command cancel -> c
    javax.microedition.lcdui.Form form -> d
    NetworkThread nt -> e
    javax.microedition.lcdui.Display d -> f
    java.lang.String user -> g
    java.lang.String from -> h
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
RosterFactory -> a:
    java.util.Vector contacts -> a
    RosterList list -> b
    RosterItem getItem(int) -> a
    void updateContact(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void insertContact(RosterItem) -> a
    void refreshItem(java.lang.String) -> a
    void deleteItem(java.lang.String) -> b
    void addMessage(java.lang.String,java.lang.String,java.lang.String) -> a
RosterItem -> m:
    java.lang.String[] smiles -> a
    java.lang.String[] smilep -> b
    java.lang.String name -> m
    java.lang.String statusStr -> n
    java.lang.String jid -> c
    java.util.Vector mess -> d
    java.util.Vector times -> o
    boolean isNew -> e
    java.lang.String session -> f
    java.util.Vector statuses -> p
    MessageForm form -> q
    javax.microedition.lcdui.Display d -> r
    RosterList rl -> s
    int status -> g
    javax.microedition.lcdui.Image online -> h
    javax.microedition.lcdui.Image offline -> i
    javax.microedition.lcdui.Image away -> j
    javax.microedition.lcdui.Image xa -> k
    javax.microedition.lcdui.Image dnd -> l
    void startForm() -> a
    void addMessage(java.lang.String,boolean) -> a
    java.lang.String getFullName() -> b
    javax.microedition.lcdui.Image getImage(java.lang.String) -> a
    MessageForm getMessageForm() -> e
    int min(int,int) -> a
    boolean compare(RosterItem,JabberProfile) -> a
    javax.microedition.lcdui.Image getImg() -> c
    javax.microedition.lcdui.Image getImageByStatus(int) -> a
    java.lang.String getName() -> d
    void setName(java.lang.String) -> b
    void setStatus(int,java.lang.String,java.lang.String) -> a
    void setStatusInfoForMessage() -> f
RosterList -> d:
    JabberProfile jp -> a
    javax.microedition.lcdui.Display d -> b
    javax.microedition.lcdui.List roster -> c
    NetworkThread thread -> d
    RosterFactory factory -> e
    javax.microedition.lcdui.Command quit -> n
    javax.microedition.lcdui.Command delete -> o
    javax.microedition.lcdui.Command add -> p
    javax.microedition.lcdui.Command status -> q
    javax.microedition.lcdui.Command mail -> r
    javax.microedition.lcdui.Command rename -> s
    javax.microedition.lcdui.Command volume -> t
    javax.microedition.lcdui.Command showlog -> u
    java.lang.String fullJid -> f
    java.lang.String lastTime -> g
    java.lang.String tid -> h
    MailViewer mails -> i
    java.util.Vector onlines -> j
    java.util.Vector busies -> k
    java.util.Vector aways -> l
    javax.microedition.media.Player p -> m
    void playMessage() -> a
    void init() -> b
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
StatusItem -> z:
    java.lang.String jid -> c
    java.lang.String statusText -> a
    int status -> b
    void setJid(java.lang.String) -> a
    java.lang.String toString() -> toString
TCPNetworkThread -> r:
    java.io.InputStream is -> a
    java.io.OutputStream os -> i
    javax.microedition.io.StreamConnection conn -> j
    void terminate(boolean) -> a
    void run() -> run
    XmlNode readStanza() -> a
    XmlNode readOneStanza() -> d
    void writeToAir(java.lang.String) -> a
    void initConnection(java.lang.String) -> e
    void startSession$61ac76cf(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
VolumeSetup -> l:
    javax.microedition.lcdui.Display d -> a
    RosterList list -> b
    javax.microedition.lcdui.Form form -> c
    javax.microedition.lcdui.Gauge volume -> d
    javax.microedition.lcdui.Command ok -> e
    javax.microedition.lcdui.Command cancel -> f
    void commandAction(javax.microedition.lcdui.Command,javax.microedition.lcdui.Displayable) -> commandAction
XmlNode -> n:
    java.util.Vector childs -> a
    java.util.Hashtable attributes -> c
    java.lang.String name -> d
    java.lang.String value -> e
    java.io.InputStream is -> f
    java.lang.String buff -> g
    boolean ignoreNS -> h
    int pos -> b
    int getNextCharacter() -> c
    char nextChar() -> d
    void init(java.lang.String,java.io.InputStream) -> a
    java.lang.String getName() -> a
    java.lang.String getValue() -> b
    boolean hasValueOfChild(java.lang.String) -> a
    java.lang.String childValue(java.lang.String) -> b
    XmlNode child(java.lang.String) -> c
    java.lang.String getAttr(java.lang.String) -> d
    java.lang.String toString(int) -> a
    java.lang.String toString() -> toString
com.twmacinta.util.MD5 -> x:
    char[] HEX_CHARS -> a
    com.twmacinta.util.MD5State state -> b
    com.twmacinta.util.MD5State finals -> c
    byte[] padding -> d
    void decode(byte[],int,int[]) -> a
    void transform(com.twmacinta.util.MD5State,byte[],int,int[]) -> a
    void update(com.twmacinta.util.MD5State,byte[],int,int) -> a
    byte[] encode(int[],int) -> a
    void update(byte[]) -> c
    byte[] doFinal() -> a
    java.lang.String toHex(byte[]) -> a
    java.lang.String toBase64(byte[]) -> b
com.twmacinta.util.MD5State -> y:
    int[] state -> a
    long count -> b
    byte[] buffer -> c
custom.RichItem -> v:
    java.lang.String content -> d
    javax.microedition.lcdui.Image image -> e
    int color -> f
    boolean bold -> g
    java.util.Vector words -> h
    custom.RichText parent -> i
    int x -> a
    int y -> b
    int height -> c
    int wordHeight -> j
    int wordWidth(java.lang.String) -> a
    void cutToWords() -> a
    void setContent(java.lang.String,int,boolean) -> a
    void setImage(javax.microedition.lcdui.Image) -> a
    void recalcHeight(int,int,int) -> a
    java.lang.String getWord(java.lang.String) -> b
    void paint(javax.microedition.lcdui.Graphics,int,int,int) -> a
custom.RichText -> g:
    int canvasWidth -> a
    javax.microedition.lcdui.Font normal -> b
    javax.microedition.lcdui.Font bold -> c
    int defaultColor -> d
    int textHeight -> e
    java.util.Vector items -> g
    boolean finished -> f
    void finish() -> a
    int getMinContentWidth() -> getMinContentWidth
    int getMinContentHeight() -> getMinContentHeight
    int getPrefContentWidth(int) -> getPrefContentWidth
    int getPrefContentHeight(int) -> getPrefContentHeight
    void paint(javax.microedition.lcdui.Graphics,int,int) -> paint
    int getCanvasWidth() -> b
    void recalcHeight() -> c
    void addContent(java.lang.String,int,boolean) -> a
    void addContent(java.lang.String) -> a
    void addImage(javax.microedition.lcdui.Image) -> a
